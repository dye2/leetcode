class Solution {
public:
    string minWindow(string S, string T) {
          int ToFind[58]= {0};
          for(int i=0; i<T.size();i++)
             ++ToFind[T[i]-'A'];
          int Find[58]= {0};
          int len =S.size()+1 , fstart = 0, fend=0;
          bool bFound = false;
          for(int start =0, end =0; start<=end &&end <S.size(); end++)
          {
            if(ToFind[S[end]-'A'] ==0)
                  continue;
              ++Find[S[end]-'A'];
              bool bMet = true;
              for(int i=0;i<58;i++)
              {
                if(Find[i] < ToFind[i])
                 {
                     bMet = false;
                     break;
                 }
              }
              
              if(bMet)
              {
                  bFound = true;
		  while(ToFind[S[start]-'A'] == 0)
				    start++;
                  if(end - start < len)
                  {
                      fstart = start;
                      fend = end;
                      len = end - start;
                  }
                  --Find[S[start]-'A'];
		  --Find[S[end]-'A'];
		  start++;
		  while( start <= end && ToFind[S[start]-'A'] == 0)
			 start++;
                  end--;
              }
          }
          
          if(!bFound )
            return "";
          else 
            return S.substr(fstart,fend-fstart+1);
    }
};
