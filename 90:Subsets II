class Solution {
public:
    vector<vector<int> > subsetsWithDup(vector<int> &s) {
        sort(s.begin(),s.end());
        vector<vector<int>*> result;
        result.push_back(NULL);
        result.push_back(new vector<int>());
        int len = s.size();
        int pre =s[0];
        int nullcount =0;
        for(int i=0;i< len;i++)
        {
            result.push_back(NULL);
            bool bstop = false;
            int temp = s[i];
            if(pre == temp)
               bstop = true;
            
            int r_size = result.size();
            for(int j=r_size-1;j>=0;j--)
            {
                if(result[j] == NULL)
                    nullcount++;
                if(nullcount == 2 && bstop)
                {
                    break;
                }
                
                if(result[j] == NULL)
                {
                    continue;
                }
                else
                {
                    vector<int>* tempv = new vector<int>();
                    *tempv = *(result[j]);
                    tempv->push_back(s[i]);
                    result.push_back(tempv);
                }
            }
			pre = s[i];
			nullcount = 0;
        }
        
        vector<vector<int>> result2;
        for(int i=0;i<result.size();i++ )
        {
            if(result[i] != NULL)
            {
                vector<int> temp = *(result[i]);
                result2.push_back(temp);
            }
        }
        return result2;
    }
};
