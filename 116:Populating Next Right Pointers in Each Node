/**
 * Definition for binary tree with next pointer.
 * struct TreeLinkNode {
 *  int val;
 *  TreeLinkNode *left, *right, *next;
 *  TreeLinkNode(int x) : val(x), left(NULL), right(NULL), next(NULL) {}
 * };
 */
class Solution {
public:
    void connect(TreeLinkNode *root) {
        if(root == NULL)
           return;
        queue<TreeLinkNode*> s1;
         queue<TreeLinkNode*> s2;
        s1.push(root);
        while(!s1.empty() || !s2.empty())
        {
            TreeLinkNode* left = NULL;
            TreeLinkNode* right  = NULL;
            while(!s1.empty() )
            {
                left = s1.front();
                s1.pop();
                if(s1.empty())
                  right = NULL;
                else
                  right = s1.front();
                
                left->next = right;
               
               if(left->left != NULL)
                    s2.push(left->left);
                    
                if(left->right != NULL)
                    s2.push(left->right);
            }
            
            while(!s2.empty())
            {
                left = s2.front();
                s2.pop();
                if(s2.empty())
                  right = NULL;
                else
                  right = s2.front();
                
                left->next = right;
                
                
                if(left->left != NULL)
                    s1.push(left->left);
                    
                if(left->right != NULL)
                    s1.push(left->right);
                    
               
            }
        }
    }
};
